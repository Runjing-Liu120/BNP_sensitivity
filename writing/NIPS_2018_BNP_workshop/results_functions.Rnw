%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Do not edit the TeX file your work
% will be overwritten.  Edit the RnW
% file instead.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


<<setup, include=FALSE, cache=FALSE>>=
knitr_debug <- FALSE # Set to true to see error output
cache_knitr <- FALSE # Set to true to cache knitr output for this analysis.
source("./Rscripts/initialize.R", echo=FALSE)
source("./Rscripts/plot_sens_results.R")
@
%
<<fig_cap2, cache=cache_knitr>>=
SetImageSize(aspect_ratio= 1.0 * base_aspect_ratio)
figcap2 <- paste(
    "\\label{fig:func_sens_e_num_clusters}
Left column: the original prior $p_{0}$ in orange,
the perturbed prior $p_c$ in green. Right: linearly approximated vs.
re-fitted expected number of clusters after the pertubation.  ", sep="")
@

<<functional_sens_plot, cache=cache_knitr, fig.show='hold', fig.cap=figcap2>>=
source("Rscripts/functional_sens_results.R", echo=knitr_debug, print.eval=TRUE)
@
%
In \prettyref{fig:functional_sens_plot}, we show results for the functional
perturbation $\phi(\nu_k) = e^{\nu_k}$.
We find that the linear approximation in this case was able to capture the
direction of the perturbation, (the expected number of clusters increased under
the first pertubation, decreased under the second), although as $\delta
\rightarrow 1$ the quality of the approximation degraded.
